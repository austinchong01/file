<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-dark bg-dark">
        <div class="container">
            <span class="navbar-brand"><i class="fas fa-cloud"></i> File Uploader</span>
            <div>
                <span class="text-light me-3">Hello, <%= user.name %>!</span>
                <a href="/auth/logout" class="btn btn-outline-light btn-sm">Logout</a>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Flash Messages -->
        <% if (success_msg && success_msg.length > 0) { %>
            <div class="alert alert-success alert-dismissible fade show">
                <%= success_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>
        
        <% if (error_msg && error_msg.length > 0) { %>
            <div class="alert alert-danger alert-dismissible fade show">
                <%= error_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>

        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1><i class="fas fa-tachometer-alt"></i> Dashboard</h1>
            <div>
                <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#folderModal">
                    <i class="fas fa-folder-plus"></i> New Folder
                </button>
                <a href="/files/upload" class="btn btn-success">
                    <i class="fas fa-upload"></i> Upload
                </a>
            </div>
        </div>

        <!-- File Manager -->
        <div class="row">
            <!-- Folders -->
            <% folders.forEach(folder => { %>
            <div class="col-md-3 mb-3">
                <div class="card h-100">
                    <div class="card-body text-center d-flex flex-column">
                        <a href="/folders/<%= folder.id %>" class="text-decoration-none">
                            <i class="fas fa-folder fa-3x text-warning mb-2" style="cursor: pointer;"></i>
                        </a>
                        <h6 class="card-title"><%= folder.name %></h6>
                        <% if (folder.description) { %>
                            <small class="text-muted flex-grow-1"><%= folder.description %></small>
                        <% } %>
                        <div class="mt-auto">
                            <form method="POST" action="/folders/<%= folder.id %>?_method=DELETE" class="d-inline">
                                <button type="submit" class="btn btn-sm btn-danger" 
                                        onclick="return confirm('Delete folder and all its contents?')">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <% }); %>

            <!-- Files -->
            <% files.forEach(file => { %>
            <div class="col-md-3 mb-3">
                <div class="card h-100">
                    <div class="card-body text-center d-flex flex-column">
                        <% 
                        let iconClass = 'fa-file';
                        let iconColor = 'text-secondary';
                        if (file.mimetype.startsWith('image/')) { iconClass = 'fa-file-image'; iconColor = 'text-info'; }
                        else if (file.mimetype.startsWith('video/')) { iconClass = 'fa-file-video'; iconColor = 'text-danger'; }
                        else if (file.mimetype.startsWith('audio/')) { iconClass = 'fa-file-audio'; iconColor = 'text-success'; }
                        else if (file.mimetype === 'application/pdf') { iconClass = 'fa-file-pdf'; iconColor = 'text-danger'; }
                        else if (file.mimetype.includes('word')) { iconClass = 'fa-file-word'; iconColor = 'text-primary'; }
                        else if (file.mimetype.includes('excel')) { iconClass = 'fa-file-excel'; iconColor = 'text-success'; }
                        else if (file.mimetype.includes('powerpoint')) { iconClass = 'fa-file-powerpoint'; iconColor = 'text-warning'; }
                        %>
                        <i class="fas <%= iconClass %> fa-3x <%= iconColor %> mb-2"></i>
                        
                        <h6 class="card-title" title="<%= file.originalName %>">
                            <%= file.originalName.length > 20 ? file.originalName.substring(0, 20) + '...' : file.originalName %>
                        </h6>
                        
                        <small class="text-muted flex-grow-1">
                            <%= (file.size / 1024).toFixed(1) %> KB<br>
                            <small><%= new Date(file.createdAt).toLocaleDateString() %></small>
                        </small>
                        
                        <!-- Cloud storage indicator -->
                        <div class="mb-2">
                            <span class="badge bg-success">
                                <i class="fas fa-cloud"></i> Cloud
                            </span>
                        </div>
                        
                        <div class="mt-auto">
                            <!-- Action buttons -->
                            <div class="btn-group w-100" role="group">
                                <a href="/files/<%= file.id %>/download" class="btn btn-sm btn-success" title="Download">
                                    <i class="fas fa-download"></i>
                                </a>
                                <form method="POST" action="/files/<%= file.id %>?_method=DELETE" class="flex-fill">
                                    <button type="submit" class="btn btn-sm btn-danger w-100" 
                                            onclick="return confirm('Delete this file?')" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <% }); %>
        </div>

        <% if (folders.length === 0 && files.length === 0) { %>
        <div class="text-center mt-5">
            <i class="fas fa-folder-open fa-5x text-muted mb-3"></i>
            <h3>No files or folders</h3>
            <p class="text-muted">Start by creating a folder or uploading a file to cloud storage</p>
            <div>
                <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#folderModal">
                    <i class="fas fa-folder-plus"></i> Create Folder
                </button>
                <a href="/files/upload" class="btn btn-success">
                    <i class="fas fa-upload"></i> Upload File
                </a>
            </div>
        </div>
        <% } %>

        <!-- Statistics Card -->
        <% if (files.length > 0 || folders.length > 0) { %>
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <h6><i class="fas fa-chart-bar"></i> Storage Summary</h6>
                        <div class="row text-center">
                            <div class="col-md-3">
                                <div class="border-end">
                                    <h4 class="text-primary"><%= files.length %></h4>
                                    <small class="text-muted">Files</small>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="border-end">
                                    <h4 class="text-warning"><%= folders.length %></h4>
                                    <small class="text-muted">Folders</small>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="border-end">
                                    <h4 class="text-success">
                                        <%
                                        let totalSize = files.reduce((sum, file) => sum + file.size, 0);
                                        let units = ['B', 'KB', 'MB', 'GB'];
                                        let i = 0;
                                        while (totalSize >= 1024 && i < units.length - 1) {
                                            totalSize /= 1024;
                                            i++;
                                        }
                                        %>
                                        <%= totalSize.toFixed(i > 0 ? 1 : 0) %> <%= units[i] %>
                                    </h4>
                                    <small class="text-muted">Total Size</small>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-info">
                                    <i class="fas fa-cloud"></i>
                                </h4>
                                <small class="text-muted">Cloud Storage</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% } %>
    </div>

    <!-- Create Folder Modal -->
    <div class="modal fade" id="folderModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Folder</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form action="/folders/create" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="name" class="form-label">Folder Name</label>
                            <input type="text" class="form-control" id="name" name="name" 
                                   placeholder="Enter folder name" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description (Optional)</label>
                            <textarea class="form-control" id="description" name="description" 
                                      rows="3" placeholder="Enter folder description"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-folder-plus"></i> Create Folder
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Download functionality enhancement -->
    <script>
        // Add download progress indication
        document.addEventListener('DOMContentLoaded', function() {
            const downloadLinks = document.querySelectorAll('a[href*="/download"]');
            
            downloadLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    const btn = this;
                    const originalHtml = btn.innerHTML;
                    
                    // Show downloading state
                    btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                    btn.classList.add('disabled');
                    
                    // Reset after 3 seconds
                    setTimeout(() => {
                        btn.innerHTML = originalHtml;
                        btn.classList.remove('disabled');
                    }, 3000);
                });
            });
        });

        // Quick actions for files
        function quickDownload(fileId, fileName) {
            showToast(`Downloading ${fileName}...`);
            window.open(`/files/${fileId}/download`, '_blank');
        }

        function quickView(fileId) {
            window.open(`/files/${fileId}/view`, '_blank');
        }

        function showToast(message, type = 'info') {
            // Create toast element
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            // Add to page
            let toastContainer = document.getElementById('toastContainer');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toastContainer';
                toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
                document.body.appendChild(toastContainer);
            }
            
            toastContainer.innerHTML = toastHtml;
            const toastElement = toastContainer.querySelector('.toast');
            const toast = new bootstrap.Toast(toastElement, { delay: 2000 });
            toast.show();
        }

        // File preview function
        function previewFile(fileId, fileName, mimetype, cloudinaryUrl, fileSize) {
            const modal = new bootstrap.Modal(document.getElementById('filePreviewModal'));
            const previewContent = document.getElementById('previewContent');
            const previewFileName = document.getElementById('previewFileName');
            const downloadLink = document.getElementById('downloadLink');
            
            // Set modal title and download link
            previewFileName.textContent = fileName;
            downloadLink.href = `/files/${fileId}/download`;
            
            // Generate preview content based on file type
            let content = '';
            
            if (mimetype.startsWith('image/')) {
                content = `
                    <div class="text-center">
                        <img src="${cloudinaryUrl}" alt="${fileName}" class="img-fluid rounded shadow" style="max-height: 400px;">
                        <div class="mt-2">
                            <small class="text-muted">Size: ${fileSize} KB</small>
                        </div>
                    </div>
                `;
            } else if (mimetype === 'application/pdf') {
                content = `
                    <div class="text-center">
                        <div class="mb-3">
                            <i class="fas fa-file-pdf fa-5x text-danger"></i>
                        </div>
                        <h5>${fileName}</h5>
                        <p class="text-muted">PDF Document • ${fileSize} KB</p>
                        <a href="${cloudinaryUrl}" target="_blank" class="btn btn-outline-primary">
                            <i class="fas fa-external-link-alt"></i> Open in New Tab
                        </a>
                    </div>
                `;
            } else if (mimetype === 'application/pdf') {
                content = `
                    <div class="text-center">
                        <div class="mb-3">
                            <i class="fas fa-file-pdf fa-5x text-danger"></i>
                        </div>
                        <h5>${fileName}</h5>
                        <p class="text-muted">PDF Document • ${fileSize} KB</p>
                        <a href="${cloudinaryUrl}" target="_blank" class="btn btn-outline-primary">
                            <i class="fas fa-external-link-alt"></i> Open in New Tab
                        </a>
                    </div>
                `;
            } else if (mimetype.startsWith('video/')) {
                content = `
                    <div class="text-center">
                        <video controls class="w-100" style="max-height: 400px;">
                            <source src="${cloudinaryUrl}" type="${mimetype}">
                            Your browser does not support the video tag.
                        </video>
                        <div class="mt-2">
                            <small class="text-muted">Size: ${fileSize} KB</small>
                        </div>
                    </div>
                `;
            } else if (mimetype.startsWith('audio/')) {
                content = `
                    <div class="text-center">
                        <div class="mb-3">
                            <i class="fas fa-file-audio fa-5x text-success"></i>
                        </div>
                        <h5>${fileName}</h5>
                        <audio controls class="w-100 mt-3">
                            <source src="${cloudinaryUrl}" type="${mimetype}">
                            Your browser does not support the audio element.
                        </audio>
                        <div class="mt-2">
                            <small class="text-muted">Size: ${fileSize} KB</small>
                        </div>
                    </div>
                `;
            } else if (mimetype.startsWith('text/') || mimetype.includes('document')) {
                let iconClass = 'fa-file';
                let iconColor = 'text-secondary';
                if (mimetype.includes('word')) { iconClass = 'fa-file-word'; iconColor = 'text-primary'; }
                else if (mimetype.includes('excel')) { iconClass = 'fa-file-excel'; iconColor = 'text-success'; }
                else if (mimetype.includes('powerpoint')) { iconClass = 'fa-file-powerpoint'; iconColor = 'text-warning'; }
                
                content = `
                    <div class="text-center">
                        <div class="mb-3">
                            <i class="fas ${iconClass} fa-5x ${iconColor}"></i>
                        </div>
                        <h5>${fileName}</h5>
                        <p class="text-muted">Document • ${fileSize} KB</p>
                        <p class="text-muted">Preview not available for this document type</p>
                        <a href="${cloudinaryUrl}" target="_blank" class="btn btn-outline-primary">
                            <i class="fas fa-external-link-alt"></i> Open in New Tab
                        </a>
                    </div>
                `;
            } else {
                content = `
                    <div class="text-center">
                        <div class="mb-3">
                            <i class="fas fa-file fa-5x text-secondary"></i>
                        </div>
                        <h5>${fileName}</h5>
                        <p class="text-muted">${mimetype} • ${fileSize} KB</p>
                        <p class="text-muted">Preview not available for this file type</p>
                    </div>
                `;
            }
            
            previewContent.innerHTML = content;
            modal.show();
        }
    </script>
</body>
</html>