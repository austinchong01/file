<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      /* Custom styles for SVG icons */
      .custom-folder-icon {
        transition: transform 0.2s ease;
      }

      .custom-folder-icon:hover {
        transform: scale(1.1);
      }

      .footer {
        width: 1000px;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-dark bg-dark">
      <div class="container">
        <span class="navbar-brand"
          ><i class="fas fa-cloud"></i> File Uploader</span
        >
        <div>
          <span class="text-light me-3">Hello, <%= user.name %>!</span>
          <a href="/auth/logout" class="btn btn-outline-light btn-sm">Logout</a>
        </div>
      </div>
    </nav>

    <div class="container mt-4">
      <!-- Header -->
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-tachometer-alt"></i> Dashboard</h1>
        <div>
          <button
            class="btn btn-primary me-2"
            width="25"
            height="25"
            data-bs-toggle="modal"
            data-bs-target="#folderModal"
          >
            <i class="fas fa-folder-plus"></i> New Folder
          </button>
          <a href="/files/upload" class="btn btn-success">
            <img
              src="/images/upload.svg"
              alt="upload"
              width="25"
              height="25"
              style="margin-right: 6px; filter: invert(1)"
            />
            Upload
          </a>
        </div>
      </div>

      <!-- File Manager -->
      <div class="row">
        <!-- Folders with Custom SVG Icons -->
        <% folders.forEach(folder => { %>
        <div class="col-md-3 mb-3">
          <div class="card h-100">
            <div class="card-body text-center d-flex flex-column">
              <a href="/folders/<%= folder.id %>" class="text-decoration-none">
                <img
                  src="/images/folder.svg"
                  alt="folder"
                  class="custom-folder-icon"
                  width="100px"
                />
              </a>
              <h6 class="card-title"><%= folder.name %></h6>
              <% if (folder.description) { %>
              <small class="text-muted flex-grow-1"
                ><%= folder.description %></small
              >
              <% } %>
              <div class="mt-auto">
                <form
                  method="POST"
                  action="/folders/<%= folder.id %>?_method=DELETE"
                  class="d-inline"
                >
                  <button
                    type="submit"
                    class="btn btn-sm btn-danger"
                    onclick="return confirm('Delete folder and all its contents?')"
                  >
                    <i class="fas fa-trash"></i> Delete
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
        <% }); %>

        <!-- Files with Custom SVG Icons -->
        <% files.forEach(file => { %>
        <% }); %>

        <!-- Statistics Card -->
        <div class="footer text-center">
          <h6>Storage Summary</h6>
          <h4 style="color: green;">
            <% let totalSize = files.reduce((sum, file) => sum + file.size, 0);
            let units = ['B', 'KB', 'MB', 'GB']; let i = 0; while (totalSize >=
            1024 && i < units.length - 1) { totalSize /= 1024; i++; } %> <%=
            totalSize.toFixed(i > 0 ? 1 : 0) %> <%= units[i] %>
          </h4>
          <small class="text-muted">Total Size</small>
        </div>
      </div>
    </div>

    <!-- Create Folder Modal -->
    <div class="modal fade" id="folderModal">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Create Folder</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <form action="/folders/create" method="POST">
            <div class="modal-body">
              <div class="mb-3">
                <label for="name" class="form-label">Folder Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Enter folder name"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="description" class="form-label"
                  >Description (Optional)</label
                >
                <textarea
                  class="form-control"
                  id="description"
                  name="description"
                  rows="3"
                  placeholder="Enter folder description"
                ></textarea>
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button type="submit" class="btn btn-primary">
                <i class="fas fa-folder-plus"></i> Create Folder
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      // Add download progress indication
      document.addEventListener("DOMContentLoaded", function () {
        const downloadLinks = document.querySelectorAll('a[href*="/download"]');

        downloadLinks.forEach((link) => {
          link.addEventListener("click", function (e) {
            const btn = this;
            const originalHtml = btn.innerHTML;

            // Show downloading state
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            btn.classList.add("disabled");

            // Reset after 3 seconds
            setTimeout(() => {
              btn.innerHTML = originalHtml;
              btn.classList.remove("disabled");
            }, 3000);
          });
        });
      });

      function showToast(message, type = "info") {
        // Create toast element
        const toastHtml = `
                <div class="toast align-items-center text-white bg-${type} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;

        // Add to page
        let toastContainer = document.getElementById("toastContainer");
        if (!toastContainer) {
          toastContainer = document.createElement("div");
          toastContainer.id = "toastContainer";
          toastContainer.className =
            "toast-container position-fixed bottom-0 end-0 p-3";
          document.body.appendChild(toastContainer);
        }

        toastContainer.innerHTML = toastHtml;
        const toastElement = toastContainer.querySelector(".toast");
        const toast = new bootstrap.Toast(toastElement, { delay: 2000 });
        toast.show();
      }
    </script>
  </body>
</html>
