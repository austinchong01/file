// prisma/schema.prisma - Updated schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  folders Folder[]
  files   File[]

  @@map("users")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime

  @@map("sessions")
}

model Folder {
  id          String   @id @default(cuid())
  name        String
  userId      String
  parentId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  parent   Folder?  @relation("FolderHierarchy", fields: [parentId], references: [id])
  children Folder[] @relation("FolderHierarchy")
  files    File[]
  
  @@map("folders")
}

model File {
  id                      String   @id @default(cuid())
  originalName            String
  displayName             String?
  mimetype                String
  size                    Int
  cloudinaryUrl           String   // Cloudinary URL
  cloudinaryPublicId      String   // Cloudinary public_id
  cloudinaryResourceType  String?  // Store the resource type used in Cloudinary
  userId                  String
  folderId                String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder Folder? @relation(fields: [folderId], references: [id], onDelete: SetNull)
  
  @@map("files")
}